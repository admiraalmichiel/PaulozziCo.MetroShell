<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls" 
    xmlns:framework="clr-namespace:Microsoft.LightSwitch.Presentation.Framework;assembly=Microsoft.LightSwitch.Client"
    xmlns:fxconv="clr-namespace:Microsoft.LightSwitch.Presentation.Framework.Converters.Internal;assembly=Microsoft.LightSwitch.Client"
    xmlns:ctl="clr-namespace:Microsoft.LightSwitch.Presentation.Implementation.Controls;assembly=Microsoft.LightSwitch.Client.Internal"
    xmlns:style="clr-namespace:Microsoft.LightSwitch.Presentation.Framework.Helpers;assembly=Microsoft.LightSwitch.Client"
    xmlns:fm="clr-namespace:Microsoft.LightSwitch.Presentation.Framework;assembly=Microsoft.LightSwitch.Client"
    xmlns:slu="clr-namespace:Microsoft.LightSwitch.SilverlightUtilities.Controls.Internal;assembly=Microsoft.LightSwitch.Client"
    xmlns:internalstyle="clr-namespace:Microsoft.LightSwitch.Presentation.Framework.Styles.Internal;assembly=Microsoft.LightSwitch.Client"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d">

    <!-- TextBox styles for all uses of the TextBox in LightSwitch.  To ensure that textboxes work properly in the data grid, a separate
         style is used for standalone textboxes and textboxes inside the grid.
    -->
    <internalstyle:ErrorToStyleConverter x:Key="ErrorToStyleConverter" />
    <fxconv:ValidationResultsToBrushConverter x:Key="ValidationResultsToBrushConverter" />

    <!-- Base appearance for all text boxes-->
    <ControlTemplate x:Key="TextBaseControlTemplate" TargetType="Control">
        <Grid x:Name="RootElement">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Hover" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentElement" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReadOnly"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Hover" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Focus" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Invalid" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Invalid" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" />
                            <DoubleAnimation Duration="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Focus" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Opacity="1" BorderBrush="{StaticResource ControlBorderBrush}" Background="{StaticResource TextBoxBackgroundBrush}" VerticalAlignment="Stretch">
                <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Margin="5,0,2,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Border>
            <Rectangle x:Name="Hover" Stroke="{StaticResource ControlMouseOverBorderBrush}" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}"/>
            <Rectangle x:Name="Focus" HorizontalAlignment="Left" Width="2" Fill="{StaticResource DetailsBorderColor}" Opacity="0"/>
            <Border x:Name="Invalid" BorderThickness="1" CornerRadius="1"
                            slu:ObservableToPropertyChangeHelper.ObservableSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=(Validation.Errors)}"
                            BorderBrush="{StaticResource ErrorHighlightBrush}"
                            Opacity="0">
                <ToolTipService.ToolTip>
                    <fm:ValidationToolTip x:Name="validationTooltip"
                                                      BorderThickness="1" BorderBrush="{StaticResource ErrorHighlightBrush}"
                                                      Errors="{Binding (Validation.Errors), RelativeSource={RelativeSource TemplatedParent}}"
                                                      PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                          >
                        <ToolTip.Triggers>
                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ToolTip.Triggers>
                    </fm:ValidationToolTip>
                </ToolTipService.ToolTip>
            </Border>

            <!--<Rectangle x:Name="Invalid" Stroke="{StaticResource ErrorHighlightBrush}" Opacity="0"/>-->
            <Grid x:Name="grid" HorizontalAlignment="Left" Width="10" Height="10" Margin="-5,0,0,0" Opacity="0">
                <Ellipse StrokeThickness="0" Fill="{StaticResource ErrorHighlightBrush}"/>
                <Path
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Height="6"
								Data="M 1,0 C1,0 0,1 0,1 0,1 2,3 2,3 2,3 0,5 0,5 0,5 1,6 1,6 1,6 3,4 3,4 3,4 5,6 5,6 5,6 6,5 6,5 6,5 4,3 4,3 4,3 6,1 6,1 6,1 5,0 5,0 5,0 3,2 3,2 3,2 1,0 1,0 z"
								Fill="#ffffff"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <!-- Style used when the textbox is not inside the data grid -->
    <Style x:Key="TextBoxBaseStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="MinHeight" Value="21"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource TextBaseControlTemplate}"/>
    </Style>
    
    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}"/>
   

    <!-- Used when the text box is inside the data grid.  Also used by other controls, such as the AutoCompleteBox-->
    <Style x:Key="TextBoxWithValidationInDataGridStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource TextBaseControlTemplate}"/>
    </Style>
    <Style x:Key="TextBoxWithValidationStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="Template" Value="{StaticResource TextBaseControlTemplate}"/>
    </Style>
</ResourceDictionary>
